name: Android Full Auto Build & Ephemeral Sign & Catbox

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Check out the repo
      - name: Check out
        uses: actions/checkout@v3

      # 2) Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: gradle

      # 3) Make gradlew executable
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # 4) Build Debug & Release APKs
      - name: Build Debug
        run: ./gradlew assembleDebug

      - name: Build Release
        run: ./gradlew assembleRelease

      # 5) Find the APK filenames
      - name: Find APKs
        id: find_apks
        run: |
          DEBUG_APK=$(find app/build/outputs/apk/debug/ -name "*.apk" | head -n 1)
          RELEASE_APK=$(find app/build/outputs/apk/release/ -name "*.apk" | head -n 1)

          echo "DEBUG_APK=$DEBUG_APK" >> $GITHUB_ENV
          echo "RELEASE_APK=$RELEASE_APK" >> $GITHUB_ENV
          
          echo "Debug APK found: $DEBUG_APK"
          echo "Release APK found: $RELEASE_APK"

      # 6) Generate an ephemeral keystore
      - name: Generate Ephemeral Keystore
        run: |
          keytool -genkey \
            -v \
            -keystore ephemeral.jks \
            -alias ephemeralKey \
            -keyalg RSA \
            -keysize 2048 \
            -validity 36500 \
            -storepass ephemeralStorePass \
            -keypass ephemeralKeyPass \
            -dname "CN=GithubActions, OU=CI, O=AutoSign, L=GitHub, ST=GH, C=US" \
            -storetype JKS

      # 7) Sign the Release APK with apksigner
      - name: Sign Release APK
        if: env.RELEASE_APK != ''
        run: |
          BUILD_TOOLS_PATH=$ANDROID_HOME/build-tools/$(ls "$ANDROID_HOME/build-tools/" | sort -V | tail -n 1)
          echo "Signing release APK: $RELEASE_APK"
          $BUILD_TOOLS_PATH/apksigner sign \
            --ks ephemeral.jks \
            --ks-key-alias ephemeralKey \
            --ks-pass pass:ephemeralStorePass \
            --key-pass pass:ephemeralKeyPass \
            --out "${RELEASE_APK}" \
            "${RELEASE_APK}"

      # 8) Verify the signed APK
      - name: Verify Signed APK
        if: env.RELEASE_APK != ''
        run: |
          BUILD_TOOLS_PATH=$ANDROID_HOME/build-tools/$(ls "$ANDROID_HOME/build-tools/" | sort -V | tail -n 1)
          echo "Verifying signed release APK: $RELEASE_APK"
          $BUILD_TOOLS_PATH/apksigner verify "${RELEASE_APK}"
          echo "Verification succeeded."

      # 9) Rename the Release APK to avoid parentheses/spaces before upload
      - name: Rename Release APK
        if: env.RELEASE_APK != ''
        run: |
          ORIGINAL_APK="${RELEASE_APK}"
          RENAMED_APK="${ORIGINAL_APK// /_}"
          RENAMED_APK="${RENAMED_APK//(/\_}"       # replace '(' with '_'
          RENAMED_APK="${RENAMED_APK//)/\_}"       # replace ')' with '_'
          
          # Or do a simpler rename removing all '()'
          # RENAMED_APK="${ORIGINAL_APK///}"
          # RENAMED_APK="${RENAMED_APK///}"
          
          mv "$ORIGINAL_APK" "$RENAMED_APK"
          echo "Renamed $ORIGINAL_APK -> $RENAMED_APK"
          echo "RENAMED_RELEASE_APK=$RENAMED_APK" >> $GITHUB_ENV

      # 10) Upload Debug APK to Catbox (anonymous)
      - name: Upload Debug APK to Catbox
        if: env.DEBUG_APK != ''
        run: |
          echo "Uploading Debug APK to Catbox..."
          UPLOAD_RESPONSE=$(curl -s -X POST \
            -F "reqtype=fileupload" \
            -F "fileToUpload=@${DEBUG_APK}" \
            https://catbox.moe/user/api.php)
          echo "Debug APK URL on Catbox: $UPLOAD_RESPONSE"

      # 11) Upload Signed Release APK to Catbox (anonymous)
      - name: Upload Signed Release APK to Catbox
        if: env.RENAMED_RELEASE_APK != ''
        run: |
          echo "Uploading Release APK to Catbox..."
          UPLOAD_RESPONSE=$(curl -s -X POST \
            -F "reqtype=fileupload" \
            -F "fileToUpload=@${RENAMED_RELEASE_APK}" \
            https://catbox.moe/user/api.php)
          echo "Release APK URL on Catbox: $UPLOAD_RESPONSE"

      # 12) (Optional) Upload Debug APK as GitHub Artifact
      - name: Upload Debug Artifact
        if: env.DEBUG_APK != ''
        uses: actions/upload-artifact@v3
        with:
          name: "Debug-APK"
          path: ${{ env.DEBUG_APK }}

      # 13) (Optional) Upload Signed Release APK as GitHub Artifact
      - name: Upload Release Artifact
        if: env.RENAMED_RELEASE_APK != ''
        uses: actions/upload-artifact@v3
        with:
          name: "Signed-Release-APK"
          path: ${{ env.RENAMED_RELEASE_APK }}
